# Nodes with values to reuse in the pipeline.
common_params:
  plugins: &common_plugins
    - automattic/a8c-ci-toolkit#3.0.1
  env: &common_env
    IMAGE_ID: xcode-15.0.1

# This is the default pipeline – it will build and test the pod
steps:
  ########################
  # Validate Swift Package
  ########################
  - label: "🔬 Validate Swift Package"
    key: "test"
    command: validate_swift_package
    env: *common_env
    plugins: *common_plugins
    artifact_paths:
      - .build/logs/*.log
      - .build/derived-data/Logs/**/*.xcactivitylog

  #################
  # Validate Podspec
  #################
  - label: "🔬 Validate Podspec"
    key: "validate"
    command: validate_podspec --patch-cocoapods
    env: *common_env
    plugins: *common_plugins
    artifact_paths: ".build/logs/*.log"

  #################
  # Lint
  #################
  - label: "🧹 Lint"
    key: "lint"
    command: lint_pod
    env: *common_env
    plugins: *common_plugins

  - label: ':swift: SwiftLint'
    key: swiftlint
    command: .buildkite/commands/swiftlint.sh --strict
    agents:
      queue: default
    plugins:
      - docker#v5.8.0:
          # TODO: Ensure the same version as local is used, i.e. with Buildkite env vars injection during pipeline upload
          image: ghcr.io/realm/swiftlint:latest
          mount-buildkite-agent: true # Needed for calling `buildkite-agent annotate`
    notify:
      - github_commit_status:
          context: SwiftLint

  #################
  # Publish the Podspec (if we're building a tag)
  #################
  - label: "⬆️ Publish Podspec"
    key: "publish"
    command: .buildkite/commands/publish-pod.sh
    env: *common_env
    plugins: *common_plugins
    depends_on:
      - test
      - validate
      - lint
      - swiftlint
    if: build.tag != null
