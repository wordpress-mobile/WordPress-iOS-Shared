# Nodes with values to reuse in the pipeline.
common_params:
  plugins: &common_plugins
  - &bash_cache automattic/bash-cache#2.7.0: ~
  env: &common_env
    IMAGE_ID: xcode-13.4.1

# This is the default pipeline – it will build and test the pod
steps:
  ################
  # Build and Test
  ################
  - label: "🧪 Build and Test iOS"
    key: "test"
    command: |
      # Workaround for https://github.com/Automattic/bash-cache-buildkite-plugin/issues/16
      gem install bundler

      build_and_test_pod
    env: *common_env
    plugins: *common_plugins
    artifact_paths: ".build/logs/*.log"

  #################
  # Validate Podspec
  #################
  - label: "🔬 Validate Podspec"
    key: "validate"
    command: |
      # Workaround for https://github.com/Automattic/bash-cache-buildkite-plugin/issues/16
      gem install bundler

      validate_podspec
    env: *common_env
    plugins: *common_plugins
    artifact_paths: ".build/logs/*.log"

  #################
  # Lint
  #################
  - label: "🧹 Lint"
    key: "lint"
    command: |
      # Workaround for https://github.com/Automattic/bash-cache-buildkite-plugin/issues/16
      gem install bundler

      lint_pod
    env: *common_env
    plugins: *common_plugins

  #################
  # Publish the Podspec (if we're building a tag)
  #################
  - label: "⬆️ Publish Podspec"
    key: "publish"
    command: |
      # Workaround for https://github.com/Automattic/bash-cache-buildkite-plugin/issues/16
      gem install bundler

      .buildkite/publish-pod.sh
    env: *common_env
    plugins: *common_plugins
    depends_on:
      - "test"
      - "validate"
      - "lint"
    if: build.tag != null
